@model Kurs.Admin.Models.DeviceViewModel

@{
    ViewBag.Title = "Редактировать устройство";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Редактировать устройство</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.Id)

    <div class="form-horizontal">
        <h4>Устройство</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.ModelName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ModelName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ModelName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Heigth, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Heigth, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Heigth, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Width, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Width, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Width, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Ram, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Ram, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Ram, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Memory, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Memory, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Memory, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Info, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Info, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Info, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Image, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TotalCount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TotalCount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TotalCount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FreeCount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FreeCount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FreeCount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CategoryId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select name="CategoryId" class="form-control">
                    @foreach (SelectListItem item in ViewBag.Categories)
                    {
                        if (item.Selected)
                        {
                            <option value="@item.Value" selected>@item.Text</option>
                        }
                        else
                        {
                            <option value="@item.Value">@item.Text</option>
                        }

                    }
                </select>
                @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ColorId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select name="ColorId" class="form-control">
                    @foreach (SelectListItem item in ViewBag.Colors)
                    {
                        if (item.Selected)
                        {
                            <option value="@item.Value" selected>@item.Text</option>
                        }
                        else
                        {
                            <option value="@item.Value">@item.Text</option>
                        }

                    }
                </select>
                @Html.ValidationMessageFor(model => model.ColorId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MakerId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select name="MakerId" class="form-control">
                    @foreach (SelectListItem item in ViewBag.Makers)
                    {
                        if (item.Selected)
                        {
                            <option value="@item.Value" selected>@item.Text</option>
                        }
                        else
                        {
                            <option value="@item.Value">@item.Text</option>
                        }

                    }
                </select>
                @Html.ValidationMessageFor(model => model.MakerId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ScreenResolutionId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select name="ScreenResolutionId" class="form-control">
                    @foreach (SelectListItem item in ViewBag.ScreenResolutions)
                    {
                        if (item.Selected)
                        {
                            <option value="@item.Value" selected>@item.Text</option>
                        }
                        else
                        {
                            <option value="@item.Value">@item.Text</option>
                        }

                    }
                </select>
                @Html.ValidationMessageFor(model => model.ScreenResolutionId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProcessorId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select name="ProcessorId" class="form-control">
                    @foreach (SelectListItem item in ViewBag.Processors)
                    {
                        if (item.Selected)
                        {
                            <option value="@item.Value" selected>@item.Text</option>
                        }
                        else
                        {
                            <option value="@item.Value">@item.Text</option>
                        }

                    }
                </select>
                @Html.ValidationMessageFor(model => model.ProcessorId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OperatingSystemId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select name="OperatingSystemId" class="form-control">
                    @foreach (SelectListItem item in ViewBag.OperatingSystems)
                    {
                        if (item.Selected)
                        {
                            <option value="@item.Value" selected>@item.Text</option>
                        }
                        else
                        {
                            <option value="@item.Value">@item.Text</option>
                        }

                    }
                </select>
                @Html.ValidationMessageFor(model => model.OperatingSystemId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DigitalCameraId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select name="DigitalCameraId" class="form-control">
                    @foreach (SelectListItem item in ViewBag.DigitalCameras)
                    {
                        if (item.Selected)
                        {
                            <option value="@item.Value" selected>@item.Text</option>
                        }
                        else
                        {
                            <option value="@item.Value">@item.Text</option>
                        }

                    }
                </select>
                @Html.ValidationMessageFor(model => model.DigitalCameraId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CountryId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select name="CountryId" class="form-control">
                    @foreach (SelectListItem item in ViewBag.Countries)
                    {
                        if (item.Selected)
                        {
                            <option value="@item.Value" selected>@item.Text</option>
                        }
                        else
                        {
                            <option value="@item.Value">@item.Text</option>
                        }

                    }
                </select>
                @Html.ValidationMessageFor(model => model.CountryId, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
